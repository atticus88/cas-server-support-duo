package edu.usf.cims.cas.support.duo.authentication.principal;

import javax.validation.constraints.NotNull;
import java.util.Collection;
import java.util.Hashtable;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

//import edu.usf.cims.cas.support.duo.authentication.principal.DuoCredentials;
import org.jasig.cas.authentication.Credential;
import org.jasig.cas.authentication.Authentication;
import org.jasig.cas.authentication.UsernamePasswordCredential;
import org.jasig.cas.authentication.principal.Principal;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * DuoCredentials implements the {@link Credentials} interface and stores the signed duo response from the
 * javascript routine on the login page that can then be verified via the {@link edu.ucr.cnc.cas.duo.authentication.handler.DuoAuthenticationHandler}
 * authentication handler.
 *
 * @author Eric Pierce <epierce@usf.edu>
 * @author Michael Kennedy <michael.kennedy@ucr.edu>
 * @version 1.1
 */
public class DuoCredential implements Credential {

    private static final long serialVersionUID = -2938374689263928372L;

    private UsernamePasswordCredential firstCredentials;

    private Authentication firstAuthentication;

    /**
     * The response from Duo
     */
    @NotNull
    private String signedDuoResponse;

    /**
     * Getter method for signedDuoResponse
     *
     * @return a String containing the signed Duo response generated by the Duo web service
     */
    public String getSignedDuoResponse() {
        return signedDuoResponse;
    }

    /**
     * Setter method for signedDuoResponse
     *
     * @param signedDuoResponse a String containing the signed Duo response generated by the Duo web service
     */
    public void setSignedDuoResponse(String signedDuoResponse) {
        this.signedDuoResponse = signedDuoResponse;
    }

    public void setFirstCredentials(UsernamePasswordCredential credentials){
        this.firstCredentials = credentials;
    }

    public UsernamePasswordCredential getFirstCredentials(){
        return firstCredentials;
    }

    public void setFirstAuthentication(Authentication authentication){
        this.firstAuthentication = authentication;
    }

    public Authentication getFirstAuthentication(){
        return firstAuthentication;
    }

    public Principal getPrincipal(){
      Authentication authentication = this.getFirstAuthentication();
      if (authentication != null){
        return authentication.getPrincipal();
      }
      return null;
    }

    public String getId() {
	return getPrincipal().getId();
    }

    public String toString() {
        return "[Username: " + getPrincipal().getId() + "@DuoCredentials]";
    }
}
